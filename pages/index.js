import Head from 'next/head';
import styles from '@/styles/Home.module.css';
import { GraphQLClient, gql } from 'graphql-request';
import { Navbar } from '../components/Navbar';
import BlogCard from '../components/BlogCard';
import { Footer } from '../components/Footer';

const graphcms = new GraphQLClient(
  'https://api-us-west-2.hygraph.com/v2/clni13m5a8vdl01uh5yr0hzbl/master'
);

const QUERY = gql`
  {
    posts {
      id
      title
      datePublished
      slug
      content {
        html
      }
      author {
        name
        avatar {
          url
        }
      }
      postPhoto {
        url
      }
    }
  }
`;

export async function getStaticProps() {
  const { posts } = await graphcms.request(QUERY);
  return {
    props: {
      posts,
    },
    revalidate: 10,
  };
}

export default function Home({ posts }) {
  return (
    <>
      <Head>
        <title>Re-actuality</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Navbar />
      <main className={`${styles.main}`}>
        <div className={styles.hero}>
          <div className={styles.heroMainBgColor}>
            <div className={styles.heroText}>
              <header>
                <h1>
                  Re-<br></br> actuality
                </h1>
              </header>
              <article>
                <p className={styles.subheading}>
                  Rethinking what was intended, expected, or believed.
                </p>
                <p>
                  A blog about how our reality is changed because of our
                  expectations. We explore the things we believe to be true or
                  intended, but in actuality, are not.
                </p>
              </article>
            </div>
            <div className={styles.heroSecondaryBgColor}></div>
          </div>
        </div>
        <div className={styles.mainContainer}>
          <div className={styles.gridContainer}>
            {posts.map((post) => (
              <BlogCard
                title={post.title}
                slug={post.slug}
                author={post.author}
                postPhoto={post.postPhoto}
                key={post.id}
                datePublished={post.datePublished}
              />
            ))}
            <div className={styles.description}></div>
          </div>
        </div>
      </main>
      <Footer />
    </>
  );
}
